services:
  telegramagent:
    container_name: telegramagent
    hostname: telegramagent
    restart: always
    # depends_on:
      # langflow:
      #   condition: service_healthy
      # postgres:
      #   condition: service_healthy
      # langgraph:
      #   condition: service_healthy
    ports:
      - "5001:5001"
    env_file:
      - .env
    environment:
      - PORT=5001
      - HOST=0.0.0.0
      - ENV=prod
    build:
      context: .
      dockerfile: ./telegramagent/Dockerfile
    volumes:
      - ./telegramagent/src:/app
    networks:
      - langflow_network

  # langflow:
  #   image: langflowai/langflow:latest # or another version tag on https://hub.docker.com/r/langflowai/langflow
  #   pull_policy: always               # set to 'always' when using 'latest' image
  #   ports:
  #     - "7860:7860"
  #   depends_on:
  #     - postgres
  #   environment:
  #     - LANGFLOW_DATABASE_URL=postgresql://langflow:langflow@postgres:5432/langflow
  #     # This variable defines where the logs, file storage, monitor data and secret keys are stored.
  #     - LANGFLOW_CONFIG_DIR=app/langflow
  #     - LANGFLOW_WORKER_TIMEOUT=120000
  #     # - LANGFLOW_AUTO_LOGIN=true
  #     # - LANGFLOW_SUPERUSER=admin
  #     # - LANGFLOW_SUPERUSER_PASSWORD=admin123
  #     # This variable defines the path where Langflow will load flows from.
  #     # - LANGFLOW_LOAD_FLOWS_PATH=/app/langflow/flows
  #   volumes:
  #     - ./langflow/langflow-data:/app/langflow
  #     - ./langflow/flows:/app/langflow/flows
  #   env_file:
  #     - .env
  #   networks:
  #     - langflow_network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:7860/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 40s

  langgraph:
    container_name: langgraph
    hostname: langgraph
    restart: always
    environment:
      - PORT=7861
      - HOST=0.0.0.0
    env_file:
      - .env
    ports:
      - "7861:7861"
    build:
      context: .
      dockerfile: ./langgraph/Dockerfile
    volumes:
      - ./langgraph/src:/app
    networks:
      - langflow_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7861/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # postgres:
  #   image: postgres:16
  #   environment:
  #     POSTGRES_USER: langflow
  #     POSTGRES_PASSWORD: langflow
  #     POSTGRES_DB: langflow
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - langflow-postgres:/var/lib/postgresql/data
  #   networks:
  #     - langflow_network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U langflow"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

volumes:
  langflow-postgres:
  langflow-data:

networks:
  langflow_network:
    driver: bridge